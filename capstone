import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

# === STEP 1: Create Sample Dataset in Code ===
data = {
    "text": [
        "Donald Trump says the moon is part of Mars.",
        "NASA's new rover successfully lands on Mars.",
        "Scientists discover cure for aging in rats.",
        "COVID-19 vaccines proven effective in new trials.",
        "Aliens spotted in the White House garden.",
        "UN confirms climate change treaty signed by 200 nations."
    ],
    "label": ["FAKE", "REAL", "FAKE", "REAL", "FAKE", "REAL"]
}

df = pd.DataFrame(data)

# === STEP 2: Split into Features and Labels ===
X = df["text"]
y = df["label"]

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.33, random_state=42
)

# === STEP 3: Text Vectorization ===
vectorizer = TfidfVectorizer(stop_words='english', max_df=0.7)
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# === STEP 4: Train the Model ===
model = LogisticRegression()
model.fit(X_train_tfidf, y_train)

# === STEP 5: Evaluate the Model ===
y_pred = model.predict(X_test_tfidf)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

# === STEP 6: Predict Custom News Input ===
while True:
    user_input = input("\nEnter news text to classify (or type 'exit'): ")
    if user_input.lower() == "exit":
        break
    input_tfidf = vectorizer.transform([user_input])
    prediction = model.predict(input_tfidf)
    print(f"Prediction: {prediction[0]}")
